{"version":3,"sources":["Components/Card.jsx","Components/Formulario.jsx","App.js","reportWebVitals.js","index.js"],"names":["card","props","className","style","width","src","imagen","alt","titulo","descripcion","puntaje","Formulario","useState","personas","setPersonas","nombre","setNombre","Form","onSubmit","event","preventDefault","Group","controlId","Label","Control","type","placeholder","required","onChange","value","target","Check","label","Button","variant","map","persona","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAEe,SAASA,EAAKC,GAC3B,OACE,sBAAKC,UAAU,kCAAkCC,MAAO,CAAEC,MAAO,SAAjE,UACE,qBAAKC,IAAKJ,EAAMK,OAAQJ,UAAU,eAAeK,IAAI,QACrD,sBAAKL,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BD,EAAMO,SAClC,mBAAGN,UAAU,YAAb,SAA0BD,EAAMQ,cAChC,mBAAGP,UAAU,aAAb,SAA2BD,EAAMS,gB,yCCJ1B,SAASC,IAAc,IAAD,EACHC,mBAAS,IADN,mBAC5BC,EAD4B,KAClBC,EADkB,OAEPF,mBAAS,IAFF,mBAE5BG,EAF4B,KAEpBC,EAFoB,KAcnC,OACE,8BACE,eAACC,EAAA,EAAD,CACEf,UAAU,aACVC,MAAO,CAAEC,MAAO,SAChBc,SAVe,SAACC,GACpBA,EAAMC,iBACNN,EAAY,GAAD,mBAAKD,GAAL,CAAeE,MAKxB,UAKE,eAACE,EAAA,EAAKI,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACL,EAAA,EAAKM,MAAN,qBACA,cAACN,EAAA,EAAKO,QAAN,CACEC,KAAK,OACLC,YAAY,oBACZC,UAAQ,EACRC,SAvBW,SAACT,GAAW,IACvBU,EAAUV,EAAMW,OAAhBD,MACRb,EAAUa,SAgCN,cAACZ,EAAA,EAAKI,MAAN,CAAYC,UAAU,oBAAtB,SACE,cAACL,EAAA,EAAKc,MAAN,CAAYN,KAAK,WAAWO,MAAM,mBAEpC,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUT,KAAK,SAA/B,oBAGA,oBAAIvB,UAAU,OAAd,SACGW,EAASsB,KAAI,SAACC,GAAD,OACZ,6BAAKA,cC9BFC,MAff,WACE,OACE,gCACE,cAAC,EAAD,CACE7B,OAAO,gBACPF,OAAO,iKACPG,YAAY,oJACZC,QAAQ,iBAEV,cAACC,EAAD,QCHS2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4776733e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function card(props) {\r\n  return (\r\n    <div className=\"card mx-auto text-white bg-dark\" style={{ width: \"18rem\" }}>\r\n      <img src={props.imagen} className=\"card-img-top\" alt=\"...\" />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{props.titulo}</h5>\r\n        <p className=\"card-text\">{props.descripcion}</p>\r\n        <p className=\"card-text1\">{props.puntaje}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Formulario() {\r\n  const [personas, setPersonas] = useState([]);\r\n  const [nombre, setNombre] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    const { value } = event.target;\r\n    setNombre(value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setPersonas([...personas, nombre]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        className=\"formulario\"\r\n        style={{ width: \"25rem\" }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Nombre</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Ingrese su nombre\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n          {/* <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text> */}\r\n        </Form.Group>\r\n\r\n        {/* <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Contrase√±a</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" required />\r\n        </Form.Group> */}\r\n        <Form.Group controlId=\"formBasicCheckbox\">\r\n          <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <ul className=\"mt-4\">\r\n          {personas.map((persona) => (\r\n            <li>{persona}</li>\r\n          ))}\r\n        </ul>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport Card from './Components/Card';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Formulario from \"./Components/Formulario\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Card\n        titulo=\"Mortal Kombat\"\n        imagen=\"https://imagenes.milenio.com/zZmiS3PZPdNpjZfjoZ_rv4S0kvA=/936x566/https://www.milenio.com/uploads/media/2021/02/18/estrenan-trailer-pelicula-mortal-kombat.jpg\"\n        descripcion='Mortal Kombat is a mysterious, intergalactic tournament of ancient martial arts. Shaolin Monk Liu Kang, from Earth, gets invited as a competitor.'\n        puntaje=\"Puntaje: 5/5\"\n      />\n      <Formulario />\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}